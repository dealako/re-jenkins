# Logging Configuration
# To use: -Djava.util.logging.config.file=<PATH_TO>/logging.properties
# For example: java -Djava.util.logging.config.file=<PATH_TO>/logging.propertiess <class>

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
# handlers= java.util.logging.ConsoleHandler

# The following creates two handlers
handlers = java.util.logging.ConsoleHandler
#handlers = java.util.logging.ConsoleHandler, java.util.logging.FileHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level= INFO
#.level = ALL

############################################################
# Console Handler specific properties.
############################################################
# Set the default logging level for new ConsoleHandler instances
java.util.logging.ConsoleHandler.level = INFO
# Set the formatter
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.SimpleFormatter.format = [%1$tY-%1$tm-%1$tdT%1$tH:%1$tM:%1$tS%tz][%4$s] %2$s %5$s%6$s%n

############################################################
# File Handler specific properties.
############################################################
# The name pattern is a String that can contain some of the following sub-strings, which will be replaced to generate the output file names:
#
# "/" represents the local path separator
# "%g" represents the generation number used to enumerate log files
# "%h" represents the home directory of the current user, which is specified by the "user.home" system property
# "%t" represents the system's temporary directory
# "%u" represents a unique number added to the file name if the original file required is in use
# "%%" represents the percent sign character '%'
#java.util.logging.FileHandler.pattern = jenkins-%u.log
#java.util.logging.FileHandler.limit = 50000
#java.util.logging.FileHandler.count = 1
#java.util.logging.FileHandler.formatter = '%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS %4$s %2$s %5$s%6$s%n'
#java.util.logging.FileHandler.level = ALL

############################################################
# Jenkins Core Logger specific properties
############################################################
jenkins.level=INFO

############################################################
# Zookeeper Logger specific properties
############################################################
org.apache.zookeeper.Level = WARNING

############################################################
# Rackspace Logger specific properties
############################################################
# Set the default logging level for the logger named com.rackspace
# -Djava.util.logging.SimpleFormatter.format="[%1$tY-%1$tm-%1$tdT%1$tH:%1$tM:%1$tS%tz][%4$s] %2$s %5$s%6$s%n" -Dcom.rackspace.logLevel=ALL -Dorg.apache.zookeeper.logLevel=WARNING
com.rackspace.level = ALL
